{"version":3,"sources":["components/Letter.js","components/LetterList.js","components/MonsterListItem.js","components/MonsterList.js","components/MonsterInfo.js","components/MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["Letter","text","onClick","toLowerCase","LetterList","letters","className","map","letter","MonsterListItem","index","href","MonsterList","monsterList","item","name","MonsterInfo","monsterInfo","calculateModifier","skill","modifier","Math","floor","id","alignment","type","challenge_rating","armor_class","strength","dexterity","constitution","intelligence","wisdom","charisma","languages","MainContent","length","App","useState","setMonsterList","setMonsterInfo","dndAPI","monstersUrl","a","fetch","response","json","monstersData","filteredMonsters","results","filter","charAt","monsterIndex","monsterData","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3ff2c11.chunk.js","sourcesContent":["function Letter({ text, onClick }) {\r\n  return <li onClick={() => onClick(text.toLowerCase())}>{text}</li>;\r\n}\r\n\r\nexport default Letter;\r\n","import Letter from \"./Letter\";\r\n\r\nfunction LetterList({ letters, onClick }) {\r\n  return (\r\n    <ul className=\"letter-list\">\r\n      {letters.map((letter) => (\r\n        <Letter key={letter.toLowerCase()} text={letter} onClick={onClick} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default LetterList;\r\n","function MonsterListItem({ text, index, onClick }) {\r\n  return (\r\n    <li onClick={() => onClick(index)}>\r\n      <a href=\"#monster-name\">{text}</a>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default MonsterListItem;\r\n","import MonsterListItem from \"./MonsterListItem\";\r\n\r\nfunction MonsterList({ monsterList, onClick }) {\r\n  return (\r\n    <section>\r\n      <ul className=\"monster-list\">\r\n        {monsterList.map((item) => {\r\n          return (\r\n            <MonsterListItem\r\n              key={item.index}\r\n              index={item.index}\r\n              text={item.name}\r\n              onClick={onClick}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MonsterList;\r\n","function MonsterInfo({ monsterInfo }) {\r\n  function calculateModifier(skill) {\r\n    let modifier = Math.floor((skill - 10) / 2);\r\n\r\n    if (modifier > 0) {\r\n      return `+${modifier}`;\r\n    }\r\n    if (modifier <= 0) {\r\n      return modifier;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section id=\"monster-info\">\r\n      {monsterInfo ? <h2 id=\"monster-name\">{monsterInfo.name}</h2> : \"\"}\r\n      {monsterInfo ? <h4>Alignment: {monsterInfo.alignment}</h4> : \"\"}\r\n      {monsterInfo ? <h4>Type: {monsterInfo.type}</h4> : \"\"}\r\n      {monsterInfo ? (\r\n        <h4>Challenge Rating: {monsterInfo.challenge_rating}</h4>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {monsterInfo ? <h4>Armor Class: {monsterInfo.armor_class}</h4> : \"\"}\r\n      {monsterInfo ? (\r\n        <h4 className=\"skills-heading\">\r\n          <u>Skills</u>\r\n        </h4>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <ul className=\"monster-skills-list\">\r\n        {monsterInfo ? (\r\n          <li>\r\n            Strength: {monsterInfo.strength} (\r\n            {calculateModifier(monsterInfo.strength)})\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {monsterInfo ? (\r\n          <li>\r\n            Dexterity: {monsterInfo.dexterity} (\r\n            {calculateModifier(monsterInfo.dexterity)})\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {monsterInfo ? (\r\n          <li>\r\n            Constitution: {monsterInfo.constitution} (\r\n            {calculateModifier(monsterInfo.constitution)})\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {monsterInfo ? (\r\n          <li>\r\n            Intelligence: {monsterInfo.intelligence} (\r\n            {calculateModifier(monsterInfo.intelligence)})\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {monsterInfo ? (\r\n          <li>\r\n            Wisdom: {monsterInfo.wisdom} (\r\n            {calculateModifier(monsterInfo.wisdom)})\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {monsterInfo ? (\r\n          <li>\r\n            Charisma: {monsterInfo.charisma} (\r\n            {calculateModifier(monsterInfo.charisma)})\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </ul>\r\n      {monsterInfo ? <h4>Languages: {monsterInfo.languages}</h4> : \"\"}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MonsterInfo;\r\n","import MonsterList from \"./MonsterList\";\r\nimport MonsterInfo from \"./MonsterInfo\";\r\n\r\nfunction MainContent({ monsterList, monsterInfo, onClick }) {\r\n  return (\r\n    <main>\r\n      {monsterList.length > 0 ? (\r\n        <MonsterList monsterList={monsterList} onClick={onClick} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {monsterList.length > 0 ? <MonsterInfo monsterInfo={monsterInfo} /> : \"\"}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport LetterList from \"./components/LetterList\";\nimport MainContent from \"./components/MainContent\";\n\nfunction App() {\n  const [monsterList, setMonsterList] = useState(\"\");\n  const [monsterInfo, setMonsterInfo] = useState(\"\");\n\n  const alphabet = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n  ];\n  const dndAPI = \"https://www.dnd5eapi.co/api/\";\n  const monstersUrl = \"monsters/\";\n\n  /**\n   * fetches monster data from the The 5th Edition Dungeons and Dragons API -- https://www.dnd5eapi.co/ -- is used in Letter.js to filter out all of the monsters whose names do not start with the letter the user clicks on.\n   * @param   letter     String containing the letter used to filter out the appropriate monster names, argument derived from a prop dictating the text of the li in the LetterList\n   * @return  [Array]    An array containing objects of the monster data (index, name, and url) of the filtered monster list\n   */\n  async function getMonstersByLetterName(letter) {\n    const response = await fetch(dndAPI + monstersUrl);\n    const monstersData = await response.json();\n\n    let filteredMonsters = monstersData.results.filter(\n      (item) => item.index.charAt(0) === letter\n    );\n\n    // console.log(filteredMonsters);\n    setMonsterList(filteredMonsters);\n    return monsterList;\n  }\n\n  /**\n   * fetches monster data from the The 5th Edition Dungeons and Dragons API -- https://www.dnd5eapi.co/ -- is used in MonsterList.js to get detailed information about the monster the user clicks on. The API provides a useful index key for each of the monsters whose value matches the specific url of the corresponding monster, so this function uses that index to find the appropriate monster url.\n   * @param   monsterIndex     String containing the index of the monster in question, argument derived from MonsterList.js's index prop which is taken from aforementioned monster index\n   * @return  {Object}    An object corresponding to the monster that was fetched from the API\n   */\n  async function getMonsterInfo(monsterIndex) {\n    const response = await fetch(dndAPI + monstersUrl + monsterIndex);\n    const monsterData = await response.json();\n\n    console.log(monsterData);\n    setMonsterInfo(monsterData);\n    return monsterInfo;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>5th Edition Dungeons & Dragons Monster Guide</h1>\n      <LetterList letters={alphabet} onClick={getMonstersByLetterName} />\n      <MainContent\n        monsterList={monsterList}\n        onClick={getMonsterInfo}\n        monsterInfo={monsterInfo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}